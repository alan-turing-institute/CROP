

jobs:
  include:
    - stage: test
      name: "Unit Tests"
      language: python
      services:
        - postgresql
      install:
        - pip install -r requirements.txt
      env:
        -CROP_SQL_HOST="localhost"
        -CROP_SQL_USER="postgres"
        -CROP_SQL_PASS="postgres"
        -CROP_SQL_DBNAME="cropdb"
        -CROP_SQL_PORT="5432"
        -PYTHONPATH=$PYTHONPATH:$(pwd)
        -CROP_STARK_USERNAME="testname"
        -CROP_STARK_PASS="testpass"
      git:
        submodules: false
      before_install:
        - echo -e "machine github.com\n  login $CI_USER_TOKEN" > ~/.netrc
        - git submodule update --init --recursive
      before_script:
        - psql -c "CREATE DATABASE cropdb;" -U postgres
      script:
        - cd __app__
        - pytest -vv

    - stage: publish
      name: "Deploy to DockerHub"
      git:
        submodules: false
      services:
        - docker
      script:
        - ./utils/travis_build/set_env_params.sh
        - echo -e "machine github.com\n  login $CI_USER_TOKEN" > ~/.netrc
        - git submodule update --init --recursive
        - if [[ "$TRAVIS_BRANCH" == "develop" ]]; then
            docker build -f Dockerfile -t turingcropapp/webapp:cropapptest . ;
          fi
        - if [[ "$TRAVIS_BRANCH" == "master" ]]; then
            docker build -f Dockerfile -t turingcropapp/webapp:cropapp . ;
          fi
  
      after_success:
        - if [[ "$TRAVIS_BRANCH" == "develop" ]]; then
            docker login -u $CROP_DOCKER_USER -p $CROP_DOCKER_PASS ;
            docker push turingcropapp/webapp:cropapptest ;
          fi
        - if [[ "$TRAVIS_BRANCH" == "master" ]]; then
            docker login -u $CROP_DOCKER_USER -p $CROP_DOCKER_PASS ;
            docker push turingcropapp/webapp:cropapp ;
          fi

stages:
  - name: publish
    if: ((type = pull_request OR type = push) AND branch = develop) OR (type = pull_request AND branch = master)