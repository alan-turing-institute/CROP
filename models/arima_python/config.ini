[paths]

[postgresql]
# These are named following the connection parameters required by psycopg2.connect
host=""
password=""
user=""
dbname = "app_dbi"

[constants]
secs_per_min = 60
mins_per_hr = 60
hrs_per_day = 24

[data]
# Number of days into the past for which to retrieve training data.
# See data_acess.get_training_data. In the original R code, this was set to 200.
# Cannot set this to a value greater than 365 (i.e. one year).
num_days_training = 200
# This is employed in clean_data.clean_env_data to specify which timestamps will be averaged together
# according to how far away they are in minutes from the rounded hour.
# In the original R code, this was set to 15.
mins_from_the_hour = 15
# This is employed in clean_data.get_time_vector to specify the timedelta between successive timestamps.
# Specify in datetime.datetime.strptime format: "%Hh%Mm%Ss" (hours, minutes, seconds).
# In the original R code, this was set to "1h0m0s" (i.e. one hour).
time_delta = "1h0m0s"
# The sampling frequency in the `utc_energy_data` table, set to 30 min. You shouldn't need to change this
# unless the sampling frequency is changed.
# Specify in datetime.datetime.strptime format: "%Hh%Mm%Ss" (hours, minutes, seconds).
freq_energy_data = "0h30m0s"
# This is used in clean_data.centered_ma to specify the size of the window for the calculation of
# centered moving averages. Must be an odd integer.
# In the original R code, this was set to 3. You should not need to change this.
window = 3

[sensors]
# List of temperature and relative humidity sensors to consider in data pre-processing.
# Used in clean_data.hourly_average_sensor.
include_sensors = ["Farm_T/RH_16B1", "Farm_T/RH_16B2", "Farm_T/RH_16B4"]

[arima]
# Hour at which the farm cycle starts, in 24h format. The default value, as specified
# in the original R code, is 4 pm (16:00).
# Specify in datetime.datetime.strptime format: "%Hh%Mm%Ss" (hours, minutes, seconds).
farm_cycle_start = "16h0m0s"
# This is used to replace missing observations in `prepare_data.impute_missing_values`.
# It allows to specify the time interval, in days, for a pseudo-season. The default is
# 30, i.e. the pseudo-season is one month. If you set the parameter `weekly_seasonality`
# to `True`, `days_interval` cannot be smaller than 30.
days_interval = 30
# This is used to replace missing observations in `prepare_data.impute_missing_values`.
# If `weekly_seasonality` is set to `True`, weekly seasonality is assumed in order to compute
# typically-observed values that will replace missing observations. The default is `True`.
weekly_seasonality = True
# the (p, d, q) order of the ARIMA model, p: AR order, d: differencing order, q: MA order
# this is the "order" parameter in "statsmodels.tsa.statespace.sarimax.SARIMAX"
arima_order = (4, 1, 2)
# the (P,D,Q,s) order of the model seasonal component for the P: AR parameters, D: differences, Q: MA parameters, and s: periodicity
# this is the "seasonal_order" parameter in "statsmodels.tsa.statespace.sarimax.SARIMAX"
seasonal_order = (1, 1, 0, 24)
# Trend. This is the "trend" parameter in "statsmodels.tsa.statespace.sarimax.SARIMAX".
# Check https://www.statsmodels.org/stable/generated/statsmodels.tsa.statespace.sarimax.SARIMAX.html for details.
# Default is no trend.
trend = []
# specify the confidence level for the forecast through the parameter `alpha`, where the confidence level is defined
# as (1 - alpha) * 100%. The default is alpha = 0.32 (i.e. 68% confidence level). See "68–95–99.7 rule" for reference.
alpha = 0.32
# number of hours into the future to forecast
hours_forecast = 48
# specify whether to perform 4-fold time-series cross-validation (True) or not (False), using 80% of the data as the initial training set
perform_cv = True
# specify whether to refit model parameters in each fold of the cross-validation (True) or not (False). Only relevant if "perform_cv" is True. Will make the calculation slower.
cv_refit = False
