[paths]

[postgresql]
# These are named following the connection parameters required by psycopg2.connect
host=""
password=""
user=""
dbname = "app_dbi"

[constants]
secs_per_min = 60
mins_per_hr = 60
hrs_per_day = 24

[data]
# Number of days into the past for which to retrieve training data.
# See data_acess.get_training_data. In the original R code, this was set to 200.
num_days_training = 200
# This is employed in clean_data.clean_env_data to specify which timestamps will be averaged together
# according to how far away they are in minutes from the rounded hour.
# In the original R code, this was set to 15.
mins_from_the_hour = 15
# This is employed in clean_data.get_time_vector to specify the timedelta between successive timestamps.
# Specify in hours (H). In the original R code, this was set to "1H".
time_delta = "1H"
# This is used in clean_data.centered_ma to specify the size of the window for the calculation of
# centered moving averages. Must be an odd integer.
# In the original R code, this was set to 3. You should not need to change this.
window = 3

[sensors]
# List of temperature and relative humidity sensors to consider in data pre-processing.
# Used in clean_data.hourly_average_sensor.
include_sensors = ["Farm_T/RH_16B1", "Farm_T/RH_16B2", "Farm_T/RH_16B4"]

[arima]
# hour at which the farm cycle starts, in 24H format as a string
farm_cycle_start = "16:00"
# the (p, d, q) order of the ARIMA model, p: AR order, d: differencing order, q: MA order
# this is the "order" parameter in "statsmodels.tsa.statespace.sarimax.SARIMAX"
arima_order = (4, 1, 2)
# the (P,D,Q,s) order of the model seasonal component for the P: AR parameters, D: differences, Q: MA parameters, and s: periodicity
# this is the "seasonal_order" parameter in "statsmodels.tsa.statespace.sarimax.SARIMAX"
seasonal_order = (1, 1, 0, 24)
# Trend. This is the "trend" parameter in "statsmodels.tsa.statespace.sarimax.SARIMAX".
# Check https://www.statsmodels.org/stable/generated/statsmodels.tsa.statespace.sarimax.SARIMAX.html for details.
# Default is no trend.
trend = []
# number of hours into the future to forecast
hours_forecast = 48
# specify whether to perform 4-fold time-series cross-validation (True) or not (False), using 80% of the data as the initial training set
perform_cv = True
# specify whether to refit model parameters in each fold of the cross-validation (True) or not (False). Only relevant if "perform_cv" is True. Will make the calculation slower.
cv_refit = False
